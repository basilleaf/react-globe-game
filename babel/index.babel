const baseUrl = "https://s3-us-west-1.amazonaws.com/marsfromspace.com/";

class Gallery extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      clickedPair: Array()
    };
  }

  checkMatch(key, e) {
    if (this.state.clickedPair[0] == key) {
      alert("please click a different box"); // this box was already clicked
      return;
    }

    this.state.clickedPair.push(key);

    var imageNames = this.state.clickedPair.map(x => x.split(".jpg")[0]);
    if (imageNames.length == 2) {
      var msg = imageNames[0] === imageNames[1] ? "you win!" : "NOPE";
      alert(msg);
      this.state.clickedPair = Array();
    }
  }

  renderImage(imageUrl, index) {
    const key = imageUrl.split("/").pop() + String(index); // unique key

    return (
      <li key={key} onClick={e => this.checkMatch(key, e)}>
        <section className="stage">
          <figure
            className="ball"
            style={{ background: "url('" + imageUrl + "') repeat-x" }}
          >
            <span className="shadow" />
          </figure>
        </section>
      </li>
    );
  }

  render() {
    return (
      <div className="gallery">
        <ul className="images">
          {this.props.imageUrls.map((imageUrl, index) =>
            this.renderImage(imageUrl, index)
          )}
        </ul>
      </div>
    );
  }
}

function shuffle(array) {
  // shuffles a javascript array
  // via https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array
  var currentIndex = array.length,
    temporaryValue,
    randomIndex;

  // While there remain elements to shuffle...
  while (0 !== currentIndex) {
    // Pick a remaining element...
    randomIndex = Math.floor(Math.random() * currentIndex);
    currentIndex -= 1;

    // And swap it with the current element.
    temporaryValue = array[currentIndex];
    array[currentIndex] = array[randomIndex];
    array[randomIndex] = temporaryValue;
  }

  return array;
}

function getGlobesCount() {
  // try to fill the page
  var globeSize = convertRemToPixels(9); // css .ball width/height
  var w = window.innerWidth;
  var h = window.innerHeight;
  var colCount = Math.floor(w / (1.1 * globeSize)); // multiplier is just a guess
  var rowCount = Math.floor(h / (1.1 * globeSize)); // to account for padding

  return Math.floor(colCount * rowCount / 2);
}

function convertRemToPixels(rem) {
  // via https://stackoverflow.com/questions/36532307/rem-px-in-javascript
  return rem * parseFloat(getComputedStyle(document.documentElement).fontSize);
}

// ready go
var uniqueGlobesCount = getGlobesCount(); // number of unique globes, this will be times 2 for match game

var allLinks = shuffle(
  Array.prototype.slice.call(document.getElementsByTagName("img"))
);
var imageLinks = allLinks
  .slice(0, uniqueGlobesCount)
  .concat(allLinks.slice(0, uniqueGlobesCount));
imageLinks = shuffle(imageLinks);
var imageUrls = imageLinks.map(lnk => baseUrl + lnk.src.split("/").pop());

document.getElementById("prerendered").remove();

ReactDOM.render(
  <Gallery imageUrls={imageUrls} />,
  document.getElementById("root")
);
